// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:htonline/model/login_user_info_entity.dart';
import 'package:htonline/generated/json/login_user_info_entity_helper.dart';
import 'package:htonline/model/essay_question_entity.dart';
import 'package:htonline/generated/json/essay_question_entity_helper.dart';
import 'package:htonline/model/home_exisers_entity.dart';
import 'package:htonline/generated/json/home_exisers_entity_helper.dart';
import 'package:htonline/model/question_type_entity.dart';
import 'package:htonline/generated/json/question_type_entity_helper.dart';
import 'package:htonline/model/search_info_entity.dart';
import 'package:htonline/generated/json/search_info_entity_helper.dart';
import 'package:htonline/model/course_detail_entity.dart';
import 'package:htonline/generated/json/course_detail_entity_helper.dart';
import 'package:htonline/model/catory_listentity_entity.dart';
import 'package:htonline/generated/json/catory_listentity_entity_helper.dart';
import 'package:htonline/model/essay_course_entity.dart';
import 'package:htonline/generated/json/essay_course_entity_helper.dart';
import 'package:htonline/model/search_keywords_bean_entity.dart';
import 'package:htonline/generated/json/search_keywords_bean_entity_helper.dart';
import 'package:htonline/model/home_doc_entity.dart';
import 'package:htonline/generated/json/home_doc_entity_helper.dart';
import 'package:htonline/model/course_info_entity.dart';
import 'package:htonline/generated/json/course_info_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case LoginUserInfoEntity:
			return loginUserInfoEntityFromJson(data as LoginUserInfoEntity, json) as T;			case LoginUserInfoData:
			return loginUserInfoDataFromJson(data as LoginUserInfoData, json) as T;			case EssayQuestionEntity:
			return essayQuestionEntityFromJson(data as EssayQuestionEntity, json) as T;			case EssayQuestionData:
			return essayQuestionDataFromJson(data as EssayQuestionData, json) as T;			case EssayQuestionDataResult:
			return essayQuestionDataResultFromJson(data as EssayQuestionDataResult, json) as T;			case EssayQuestionDataResultEssayQuestionBelongPaperVOList:
			return essayQuestionDataResultEssayQuestionBelongPaperVOListFromJson(data as EssayQuestionDataResultEssayQuestionBelongPaperVOList, json) as T;			case HomeExisersEntity:
			return homeExisersEntityFromJson(data as HomeExisersEntity, json) as T;			case HomeExisersData:
			return homeExisersDataFromJson(data as HomeExisersData, json) as T;			case QuestionTypeEntity:
			return questionTypeEntityFromJson(data as QuestionTypeEntity, json) as T;			case QuestionTypeData:
			return questionTypeDataFromJson(data as QuestionTypeData, json) as T;			case SearchInfoEntity:
			return searchInfoEntityFromJson(data as SearchInfoEntity, json) as T;			case SearchInfoData:
			return searchInfoDataFromJson(data as SearchInfoData, json) as T;			case SearchInfoDataData:
			return searchInfoDataDataFromJson(data as SearchInfoDataData, json) as T;			case SearchInfoDataDataHighlight:
			return searchInfoDataDataHighlightFromJson(data as SearchInfoDataDataHighlight, json) as T;			case SearchInfoDataDataTeacher:
			return searchInfoDataDataTeacherFromJson(data as SearchInfoDataDataTeacher, json) as T;			case CourseDetailEntity:
			return courseDetailEntityFromJson(data as CourseDetailEntity, json) as T;			case CourseDetailData:
			return courseDetailDataFromJson(data as CourseDetailData, json) as T;			case CourseDetailDataData:
			return courseDetailDataDataFromJson(data as CourseDetailDataData, json) as T;			case CourseDetailDataDataTeacherImg:
			return courseDetailDataDataTeacherImgFromJson(data as CourseDetailDataDataTeacherImg, json) as T;			case CatoryListentityEntity:
			return catoryListentityEntityFromJson(data as CatoryListentityEntity, json) as T;			case CatoryListentityData:
			return catoryListentityDataFromJson(data as CatoryListentityData, json) as T;			case CatoryListentityDataData:
			return catoryListentityDataDataFromJson(data as CatoryListentityDataData, json) as T;			case CatoryListentityDataDataTeacher:
			return catoryListentityDataDataTeacherFromJson(data as CatoryListentityDataDataTeacher, json) as T;			case EssayCourseEntity:
			return essayCourseEntityFromJson(data as EssayCourseEntity, json) as T;			case EssayCourseData:
			return essayCourseDataFromJson(data as EssayCourseData, json) as T;			case SearchKeywordsBeanEntity:
			return searchKeywordsBeanEntityFromJson(data as SearchKeywordsBeanEntity, json) as T;			case HomeDocEntity:
			return homeDocEntityFromJson(data as HomeDocEntity, json) as T;			case HomeDocData:
			return homeDocDataFromJson(data as HomeDocData, json) as T;			case HomeDocDataHomeOperateDoc:
			return homeDocDataHomeOperateDocFromJson(data as HomeDocDataHomeOperateDoc, json) as T;			case HomeDocDataCustomizeDoc:
			return homeDocDataCustomizeDocFromJson(data as HomeDocDataCustomizeDoc, json) as T;			case HomeDocDataMessageList:
			return homeDocDataMessageListFromJson(data as HomeDocDataMessageList, json) as T;			case HomeDocDataMessageListParams:
			return homeDocDataMessageListParamsFromJson(data as HomeDocDataMessageListParams, json) as T;			case CourseInfoEntity:
			return courseInfoEntityFromJson(data as CourseInfoEntity, json) as T;			case CourseInfoData:
			return courseInfoDataFromJson(data as CourseInfoData, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case LoginUserInfoEntity:
			return loginUserInfoEntityToJson(data as LoginUserInfoEntity);			case LoginUserInfoData:
			return loginUserInfoDataToJson(data as LoginUserInfoData);			case EssayQuestionEntity:
			return essayQuestionEntityToJson(data as EssayQuestionEntity);			case EssayQuestionData:
			return essayQuestionDataToJson(data as EssayQuestionData);			case EssayQuestionDataResult:
			return essayQuestionDataResultToJson(data as EssayQuestionDataResult);			case EssayQuestionDataResultEssayQuestionBelongPaperVOList:
			return essayQuestionDataResultEssayQuestionBelongPaperVOListToJson(data as EssayQuestionDataResultEssayQuestionBelongPaperVOList);			case HomeExisersEntity:
			return homeExisersEntityToJson(data as HomeExisersEntity);			case HomeExisersData:
			return homeExisersDataToJson(data as HomeExisersData);			case QuestionTypeEntity:
			return questionTypeEntityToJson(data as QuestionTypeEntity);			case QuestionTypeData:
			return questionTypeDataToJson(data as QuestionTypeData);			case SearchInfoEntity:
			return searchInfoEntityToJson(data as SearchInfoEntity);			case SearchInfoData:
			return searchInfoDataToJson(data as SearchInfoData);			case SearchInfoDataData:
			return searchInfoDataDataToJson(data as SearchInfoDataData);			case SearchInfoDataDataHighlight:
			return searchInfoDataDataHighlightToJson(data as SearchInfoDataDataHighlight);			case SearchInfoDataDataTeacher:
			return searchInfoDataDataTeacherToJson(data as SearchInfoDataDataTeacher);			case CourseDetailEntity:
			return courseDetailEntityToJson(data as CourseDetailEntity);			case CourseDetailData:
			return courseDetailDataToJson(data as CourseDetailData);			case CourseDetailDataData:
			return courseDetailDataDataToJson(data as CourseDetailDataData);			case CourseDetailDataDataTeacherImg:
			return courseDetailDataDataTeacherImgToJson(data as CourseDetailDataDataTeacherImg);			case CatoryListentityEntity:
			return catoryListentityEntityToJson(data as CatoryListentityEntity);			case CatoryListentityData:
			return catoryListentityDataToJson(data as CatoryListentityData);			case CatoryListentityDataData:
			return catoryListentityDataDataToJson(data as CatoryListentityDataData);			case CatoryListentityDataDataTeacher:
			return catoryListentityDataDataTeacherToJson(data as CatoryListentityDataDataTeacher);			case EssayCourseEntity:
			return essayCourseEntityToJson(data as EssayCourseEntity);			case EssayCourseData:
			return essayCourseDataToJson(data as EssayCourseData);			case SearchKeywordsBeanEntity:
			return searchKeywordsBeanEntityToJson(data as SearchKeywordsBeanEntity);			case HomeDocEntity:
			return homeDocEntityToJson(data as HomeDocEntity);			case HomeDocData:
			return homeDocDataToJson(data as HomeDocData);			case HomeDocDataHomeOperateDoc:
			return homeDocDataHomeOperateDocToJson(data as HomeDocDataHomeOperateDoc);			case HomeDocDataCustomizeDoc:
			return homeDocDataCustomizeDocToJson(data as HomeDocDataCustomizeDoc);			case HomeDocDataMessageList:
			return homeDocDataMessageListToJson(data as HomeDocDataMessageList);			case HomeDocDataMessageListParams:
			return homeDocDataMessageListParamsToJson(data as HomeDocDataMessageListParams);			case CourseInfoEntity:
			return courseInfoEntityToJson(data as CourseInfoEntity);			case CourseInfoData:
			return courseInfoDataToJson(data as CourseInfoData);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'LoginUserInfoEntity':
			return LoginUserInfoEntity().fromJson(json);			case 'LoginUserInfoData':
			return LoginUserInfoData().fromJson(json);			case 'EssayQuestionEntity':
			return EssayQuestionEntity().fromJson(json);			case 'EssayQuestionData':
			return EssayQuestionData().fromJson(json);			case 'EssayQuestionDataResult':
			return EssayQuestionDataResult().fromJson(json);			case 'EssayQuestionDataResultEssayQuestionBelongPaperVOList':
			return EssayQuestionDataResultEssayQuestionBelongPaperVOList().fromJson(json);			case 'HomeExisersEntity':
			return HomeExisersEntity().fromJson(json);			case 'HomeExisersData':
			return HomeExisersData().fromJson(json);			case 'QuestionTypeEntity':
			return QuestionTypeEntity().fromJson(json);			case 'QuestionTypeData':
			return QuestionTypeData().fromJson(json);			case 'SearchInfoEntity':
			return SearchInfoEntity().fromJson(json);			case 'SearchInfoData':
			return SearchInfoData().fromJson(json);			case 'SearchInfoDataData':
			return SearchInfoDataData().fromJson(json);			case 'SearchInfoDataDataHighlight':
			return SearchInfoDataDataHighlight().fromJson(json);			case 'SearchInfoDataDataTeacher':
			return SearchInfoDataDataTeacher().fromJson(json);			case 'CourseDetailEntity':
			return CourseDetailEntity().fromJson(json);			case 'CourseDetailData':
			return CourseDetailData().fromJson(json);			case 'CourseDetailDataData':
			return CourseDetailDataData().fromJson(json);			case 'CourseDetailDataDataTeacherImg':
			return CourseDetailDataDataTeacherImg().fromJson(json);			case 'CatoryListentityEntity':
			return CatoryListentityEntity().fromJson(json);			case 'CatoryListentityData':
			return CatoryListentityData().fromJson(json);			case 'CatoryListentityDataData':
			return CatoryListentityDataData().fromJson(json);			case 'CatoryListentityDataDataTeacher':
			return CatoryListentityDataDataTeacher().fromJson(json);			case 'EssayCourseEntity':
			return EssayCourseEntity().fromJson(json);			case 'EssayCourseData':
			return EssayCourseData().fromJson(json);			case 'SearchKeywordsBeanEntity':
			return SearchKeywordsBeanEntity().fromJson(json);			case 'HomeDocEntity':
			return HomeDocEntity().fromJson(json);			case 'HomeDocData':
			return HomeDocData().fromJson(json);			case 'HomeDocDataHomeOperateDoc':
			return HomeDocDataHomeOperateDoc().fromJson(json);			case 'HomeDocDataCustomizeDoc':
			return HomeDocDataCustomizeDoc().fromJson(json);			case 'HomeDocDataMessageList':
			return HomeDocDataMessageList().fromJson(json);			case 'HomeDocDataMessageListParams':
			return HomeDocDataMessageListParams().fromJson(json);			case 'CourseInfoEntity':
			return CourseInfoEntity().fromJson(json);			case 'CourseInfoData':
			return CourseInfoData().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'LoginUserInfoEntity':
			return List<LoginUserInfoEntity>();			case 'LoginUserInfoData':
			return List<LoginUserInfoData>();			case 'EssayQuestionEntity':
			return List<EssayQuestionEntity>();			case 'EssayQuestionData':
			return List<EssayQuestionData>();			case 'EssayQuestionDataResult':
			return List<EssayQuestionDataResult>();			case 'EssayQuestionDataResultEssayQuestionBelongPaperVOList':
			return List<EssayQuestionDataResultEssayQuestionBelongPaperVOList>();			case 'HomeExisersEntity':
			return List<HomeExisersEntity>();			case 'HomeExisersData':
			return List<HomeExisersData>();			case 'QuestionTypeEntity':
			return List<QuestionTypeEntity>();			case 'QuestionTypeData':
			return List<QuestionTypeData>();			case 'SearchInfoEntity':
			return List<SearchInfoEntity>();			case 'SearchInfoData':
			return List<SearchInfoData>();			case 'SearchInfoDataData':
			return List<SearchInfoDataData>();			case 'SearchInfoDataDataHighlight':
			return List<SearchInfoDataDataHighlight>();			case 'SearchInfoDataDataTeacher':
			return List<SearchInfoDataDataTeacher>();			case 'CourseDetailEntity':
			return List<CourseDetailEntity>();			case 'CourseDetailData':
			return List<CourseDetailData>();			case 'CourseDetailDataData':
			return List<CourseDetailDataData>();			case 'CourseDetailDataDataTeacherImg':
			return List<CourseDetailDataDataTeacherImg>();			case 'CatoryListentityEntity':
			return List<CatoryListentityEntity>();			case 'CatoryListentityData':
			return List<CatoryListentityData>();			case 'CatoryListentityDataData':
			return List<CatoryListentityDataData>();			case 'CatoryListentityDataDataTeacher':
			return List<CatoryListentityDataDataTeacher>();			case 'EssayCourseEntity':
			return List<EssayCourseEntity>();			case 'EssayCourseData':
			return List<EssayCourseData>();			case 'SearchKeywordsBeanEntity':
			return List<SearchKeywordsBeanEntity>();			case 'HomeDocEntity':
			return List<HomeDocEntity>();			case 'HomeDocData':
			return List<HomeDocData>();			case 'HomeDocDataHomeOperateDoc':
			return List<HomeDocDataHomeOperateDoc>();			case 'HomeDocDataCustomizeDoc':
			return List<HomeDocDataCustomizeDoc>();			case 'HomeDocDataMessageList':
			return List<HomeDocDataMessageList>();			case 'HomeDocDataMessageListParams':
			return List<HomeDocDataMessageListParams>();			case 'CourseInfoEntity':
			return List<CourseInfoEntity>();			case 'CourseInfoData':
			return List<CourseInfoData>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}